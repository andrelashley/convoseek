@model UploadViewModel

@{
    ViewData["Title"] = "Upload Messages";
}

<h1>Upload Messages</h1>

<hr />
<div class="row">
    <form method="post" enctype="multipart/form-data">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <label asp-for="File" class="control-label"></label>
            <input id="File" name="File" type="file" class="form-control" style="display: none;" />
            <span asp-validation-for="File" class="text-danger"></span>
        </div>

        <!-- WhatsApp Upload Button -->
        <button id="WhatsAppUploadButton" type="button" class="btn btn-primary">Import WhatsApp Data</button>

        <!-- Facebook Messenger Upload Button -->
        <button id="FacebookUploadButton" type="button" class="btn btn-secondary">Import Facebook Messenger Data</button>
    </form>
</div>
<div class="progress">
    <div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
</div>
<div>
    <a asp-controller="Search" asp-action="Index">Back to Search</a>
</div>

@section Scripts {
    <script src="~/lib/whatsapp-chat-parser/dist/index.global.js"></script>

    <script>
        const fileTag = document.getElementById("File");
        const whatsappUploadButton = document.getElementById("WhatsAppUploadButton");
        const facebookUploadButton = document.getElementById("FacebookUploadButton");
        const progressBar = document.getElementsByClassName("progress-bar")[0];

        let dataSource = ""; // To track the data source: "whatsapp" or "facebook"

        whatsappUploadButton.addEventListener('click', () => {
            dataSource = "whatsapp";
            fileTag.click();
        });

        facebookUploadButton.addEventListener('click', () => {
            dataSource = "facebook";
            fileTag.click();
        });

        fileTag.addEventListener('change', async () => {
            const file = fileTag.files[0];
            if (!file) {
                alert("No file selected.");
                return;
            }

            try {

                const validExtensions = dataSource === "whatsapp" ? ['txt'] : ['json'];
                const fileExtension = file.name.split('.').pop().toLowerCase();
                if (!validExtensions.includes(fileExtension)) {
                    alert(`Invalid file type. Please upload a ${dataSource === "whatsapp" ? "WhatsApp" : "Facebook"} file.`);
                    return;
                }

                let parsedMessages = null;

                if (dataSource === "whatsapp") {
                    const text = await file.text(); // Read the file content as text
                    parsedMessages = whatsappChatParser.parseString(text); // Parse the WhatsApp chat

                } else if (dataSource === "facebook") {
                    const text = await file.text(); // Read the JSON file as text
                    const facebookData = JSON.parse(text); // Parse the JSON content

                    // Transform Facebook JSON to match MessageDto structure
                    parsedMessages = facebookData.messages.map(msg => ({
                        Author: msg.senderName,
                        Message: msg.text,
                        Date: msg.timestamp ? new Date(msg.timestamp) : null // Convert Unix timestamp to Date
                    }));
                }

                if (!parsedMessages) {
                    throw new Error("Failed to parse messages.");
                }

                // Send the parsed messages to the server
                const jsonMessages = JSON.stringify(parsedMessages);
                const xhr = new XMLHttpRequest();
                xhr.upload.addEventListener('progress', e => {
                    const progress = Math.round((e.loaded / e.total) * 100);
                    progressBar.style.width = progress + '%';
                });

                // Use the query parameter to specify the data source
                xhr.open('POST', `/api/uploads?source=${dataSource}`, true);
                xhr.setRequestHeader('Content-Type', 'application/json');
                xhr.onload = () => {
                    if (xhr.status === 200) {
                        alert("Messages uploaded successfully!");
                        progressBar.style.width = '0%'; // Reset progress bar
                    } else {
                        alert("Failed to upload messages. Please try again.");
                        console.error(xhr.responseText);
                    }
                };
                xhr.onerror = () => {
                    alert("An error occurred while uploading messages.");
                };
                xhr.send(jsonMessages);
            } catch (error) {
                console.error("Error processing file:", error);
                alert(`Failed to process the file. Ensure it's a valid ${dataSource === "whatsapp" ? "WhatsApp" : "Facebook Messenger"} export.`);
            }
        });
    </script>
}