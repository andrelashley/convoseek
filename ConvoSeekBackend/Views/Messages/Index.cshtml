@model UploadViewModel

@{
    ViewData["Title"] = "Upload Messages";
}

@if (ViewData["ShowSubscriptionAlert"] != null && (bool)ViewData["ShowSubscriptionAlert"])
{
    <div class="alert alert-warning">
        You need an active subscription to access this feature.
        <a asp-controller="Billing" asp-action="Index">Subscribe Now</a>
    </div>
}

<h1 class="text-center mt-4">Upload Messages</h1>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <form method="post" enctype="multipart/form-data" class="text-center">
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                <input id="File" name="File" type="file" class="form-control" style="display: none;" />
                <span asp-validation-for="File" class="text-danger"></span>

                <div class="d-flex justify-content-center gap-3 mt-3">
                    <!-- WhatsApp Upload Button -->
                    <button id="WhatsAppUploadButton"
                            type="button"
                            class="btn btn-primary"
                    @(ViewData["ShowSubscriptionAlert"] != null && (bool)ViewData["ShowSubscriptionAlert"] ? "disabled" : "")>
                        <i class="bi bi-whatsapp"></i> Import WhatsApp Data
                    </button>

                    <!-- Facebook Messenger Upload Button -->
                    <button id="FacebookUploadButton"
                            type="button"
                            class="btn btn-secondary"
                    @(ViewData["ShowSubscriptionAlert"] != null && (bool)ViewData["ShowSubscriptionAlert"] ? "disabled" : "")>
                        <i class="bi bi-facebook"></i> Import Facebook Messenger Data
                    </button>
                </div>
            </form>

            <div class="progress mt-4" style="height: 20px;">
                <div class="progress-bar progress-bar-striped progress-bar-animated"
                     role="progressbar"
                     aria-valuenow="0"
                     aria-valuemin="0"
                     aria-valuemax="100"
                     style="width: 0%;"></div>
            </div>

            <div class="text-center mt-3">
                <a asp-controller="Search" asp-action="Index" class="btn btn-link">
                    <i class="bi bi-arrow-left"></i> Back to Search
                </a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/whatsapp-chat-parser/dist/index.global.js"></script>

    <script>
        const fileTag = document.getElementById("File");
        const whatsappUploadButton = document.getElementById("WhatsAppUploadButton");
        const facebookUploadButton = document.getElementById("FacebookUploadButton");
        const progressBar = document.getElementsByClassName("progress-bar")[0];

        let dataSource = ""; // Track data source: "whatsapp" or "facebook"

        whatsappUploadButton.addEventListener('click', () => {
            dataSource = "whatsapp";
            fileTag.click();
        });

        facebookUploadButton.addEventListener('click', () => {
            dataSource = "facebook";
            fileTag.click();
        });

        fileTag.addEventListener('change', async () => {
            const file = fileTag.files[0];
            if (!file) {
                alert("No file selected.");
                return;
            }

            try {
                const validExtensions = dataSource === "whatsapp" ? ['txt'] : ['json'];
                const fileExtension = file.name.split('.').pop().toLowerCase();
                if (!validExtensions.includes(fileExtension)) {
                    alert(`Invalid file type. Please upload a ${dataSource === "whatsapp" ? "WhatsApp" : "Facebook"} file.`);
                    return;
                }

                let parsedMessages = null;
                if (dataSource === "whatsapp") {
                    const text = await file.text();
                    parsedMessages = whatsappChatParser.parseString(text);
                } else if (dataSource === "facebook") {
                    const text = await file.text();
                    const facebookData = JSON.parse(text);
                    parsedMessages = facebookData.messages.map(msg => ({
                        Author: msg.senderName,
                        Message: msg.text,
                        Date: msg.timestamp ? new Date(msg.timestamp) : null,
                    }));
                }

                if (!parsedMessages) {
                    throw new Error("Failed to parse messages.");
                }

                const jsonMessages = JSON.stringify(parsedMessages);
                const xhr = new XMLHttpRequest();
                xhr.upload.addEventListener('progress', e => {
                    const progress = Math.round((e.loaded / e.total) * 100);
                    progressBar.style.width = progress + '%';
                });

                xhr.open('POST', `/api/uploads?source=${dataSource}`, true);
                xhr.setRequestHeader('Content-Type', 'application/json');
                xhr.onload = () => {
                    if (xhr.status === 200) {
                        alert("Messages uploaded successfully!");
                        progressBar.style.width = '0%';
                    } else {
                        alert("Failed to upload messages. Please try again.");
                        console.error(xhr.responseText);
                    }
                };
                xhr.onerror = () => {
                    alert("An error occurred while uploading messages.");
                };
                xhr.send(jsonMessages);
            } catch (error) {
                console.error("Error processing file:", error);
                alert(`Failed to process the file. Ensure it's a valid ${dataSource === "whatsapp" ? "WhatsApp" : "Facebook Messenger"} export.`);
            }
        });
    </script>
}