@model UploadViewModel

@{
    ViewData["Title"] = "Upload Messages";
}

<h1>Upload Messages</h1>

<hr />
<div class="row">
    <form method="post" enctype="multipart/form-data">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <label asp-for="File" class="control-label"></label>
            <input id="File" name="File" type="file" class="form-control" style="display: none;" />
            <span asp-validation-for="File" class="text-danger"></span>
            <button id="UploadButton" type="button" class="btn btn-primary">Upload</button>
        </div>
    </form>
</div>
<div class="progress">
    <div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
</div>
<div>
    <a asp-controller="Search" asp-action="Index">Back to Search</a>
</div>

@section Scripts {
    <script src="~/lib/whatsapp-chat-parser/dist/index.global.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/whatsapp-chat-parser/dist/index.global.js"></script>

    <script>
        const fileTag = document.getElementById("File");
        const uploadButton = document.getElementById("UploadButton");
        const progressBar = document.getElementsByClassName("progress-bar")[0];

        uploadButton.addEventListener('click', () => {
            fileTag.click();
        });

        fileTag.addEventListener('change', async () => {
            const file = fileTag.files[0];
            if (!file) {
                alert("No file selected.");
                return;
            }

            // Parse the file locally
            try {
                const text = await file.text(); // Read the file content as text
                const messages = whatsappChatParser.parseString(text); // Parse the WhatsApp chat
                console.log("Parsed messages:", messages);

                // Send the parsed messages to the server
                const jsonMessages = JSON.stringify(messages);
                const xhr = new XMLHttpRequest();
                xhr.upload.addEventListener('progress', e => {
                    const progress = Math.round((e.loaded / e.total) * 100);
                    progressBar.style.width = progress + '%';
                });
                xhr.open('POST', '/api/uploads', true); // Adjust the API endpoint as needed
                xhr.setRequestHeader('Content-Type', 'application/json');
                xhr.onload = () => {
                    if (xhr.status === 200) {
                        alert("Messages uploaded successfully!");
                    } else {
                        alert("Failed to upload messages. Please try again.");
                        console.error(xhr.responseText);
                    }
                };
                xhr.onerror = () => {
                    alert("An error occurred while uploading messages.");
                };
                xhr.send(jsonMessages);
            } catch (error) {
                console.error("Error parsing file:", error);
                alert("Failed to parse the file. Ensure it's a valid WhatsApp export.");
            }
        });
    </script>

}
